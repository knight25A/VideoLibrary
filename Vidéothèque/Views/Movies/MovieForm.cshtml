@model Vidéothèque.ViewModels.MovieFormViewModel
@{
    ViewBag.Title = "MovieForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>MovieForm</h2>


@using (Html.BeginForm("Save", "Movies", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Title)
        @Html.TextBoxFor(m => m.Movie.Title, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.Title)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movie.ReleaseDate)
        @Html.TextBoxFor(m => m.Movie.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control", @type = "date" })
        @Html.ValidationMessageFor(m => m.Movie.ReleaseDate)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movie.GenreId)
        @Html.DropDownListFor(m => m.Movie.GenreId, new SelectList(Model.Genres, "Id", "Name"), "Select Genre", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.GenreId)
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.Movie.NumberInStock)
        @Html.TextBoxFor(m => m.Movie.NumberInStock, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.NumberInStock)
    </div>


    <input type="file" name="file" id="file"/>
    <br>
 
    @Html.HiddenFor(m => m.Movie.Id)
    <!--Check that the request is coming from the Customer Form ONLY! Prevent other requests -->
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary"> Save </button>
}

<!-- Client side validation, not allowing to reload to server to check the forms -->
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}