@model Vidéothèque.ViewModels.CustomerFormViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customer Form</h2>

@using (Html.BeginForm("Save", "Customers"))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)

        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Name)


    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Surname)
        @Html.TextBoxFor(m => m.Customer.Surname, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Surname)

    </div>
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.isSubscribedToNewletter) Subscribe to Newsletter?
        </label>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select Membership", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)

    </div>
    @Html.HiddenFor(m => m.Customer.Id)
    <!--Check that the request is coming from the Customer Form ONLY! Prevent other requests -->
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary"> Save </button>
}

<!-- Client side validation, not allowing to reload to server to check the forms -->
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}